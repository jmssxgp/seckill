<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.jmss2u.seckill.dao.OrderDAO">
  <resultMap id="BaseResultMap" type="cn.jmss2u.seckill.model.Order">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="seckill_id" jdbcType="BIGINT" property="seckillId" />
    <result column="money" jdbcType="DECIMAL" property="money" />
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="seller_id" jdbcType="BIGINT" property="sellerId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="pay_time" jdbcType="TIMESTAMP" property="payTime" />
    <result column="status" jdbcType="CHAR" property="status" />
    <result column="recevier_address" jdbcType="VARCHAR" property="recevierAddress" />
    <result column="recevier_mobile" jdbcType="VARCHAR" property="recevierMobile" />
    <result column="recevier" jdbcType="VARCHAR" property="recevier" />
    <result column="transaction_id" jdbcType="VARCHAR" property="transactionId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, seckill_id, money, user_id, seller_id, create_time, pay_time, `status`, recevier_address, 
    recevier_mobile, recevier, transaction_id
  </sql>
  <select id="selectByExample" parameterType="cn.jmss2u.seckill.model.OrderExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from order
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from order
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="cn.jmss2u.seckill.model.OrderExample">
    delete from order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="cn.jmss2u.seckill.model.Order" useGeneratedKeys="true">
    insert into order (seckill_id, money, user_id, 
      seller_id, create_time, pay_time, 
      `status`, recevier_address, recevier_mobile, 
      recevier, transaction_id)
    values (#{seckillId,jdbcType=BIGINT}, #{money,jdbcType=DECIMAL}, #{userId,jdbcType=BIGINT}, 
      #{sellerId,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}, #{payTime,jdbcType=TIMESTAMP}, 
      #{status,jdbcType=CHAR}, #{recevierAddress,jdbcType=VARCHAR}, #{recevierMobile,jdbcType=VARCHAR}, 
      #{recevier,jdbcType=VARCHAR}, #{transactionId,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="cn.jmss2u.seckill.model.Order" useGeneratedKeys="true">
    insert into order
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="seckillId != null">
        seckill_id,
      </if>
      <if test="money != null">
        money,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="sellerId != null">
        seller_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="payTime != null">
        pay_time,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="recevierAddress != null">
        recevier_address,
      </if>
      <if test="recevierMobile != null">
        recevier_mobile,
      </if>
      <if test="recevier != null">
        recevier,
      </if>
      <if test="transactionId != null">
        transaction_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="seckillId != null">
        #{seckillId,jdbcType=BIGINT},
      </if>
      <if test="money != null">
        #{money,jdbcType=DECIMAL},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="sellerId != null">
        #{sellerId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="payTime != null">
        #{payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=CHAR},
      </if>
      <if test="recevierAddress != null">
        #{recevierAddress,jdbcType=VARCHAR},
      </if>
      <if test="recevierMobile != null">
        #{recevierMobile,jdbcType=VARCHAR},
      </if>
      <if test="recevier != null">
        #{recevier,jdbcType=VARCHAR},
      </if>
      <if test="transactionId != null">
        #{transactionId,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.jmss2u.seckill.model.OrderExample" resultType="java.lang.Long">
    select count(*) from order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update order
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.seckillId != null">
        seckill_id = #{record.seckillId,jdbcType=BIGINT},
      </if>
      <if test="record.money != null">
        money = #{record.money,jdbcType=DECIMAL},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.sellerId != null">
        seller_id = #{record.sellerId,jdbcType=BIGINT},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.payTime != null">
        pay_time = #{record.payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null">
        `status` = #{record.status,jdbcType=CHAR},
      </if>
      <if test="record.recevierAddress != null">
        recevier_address = #{record.recevierAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.recevierMobile != null">
        recevier_mobile = #{record.recevierMobile,jdbcType=VARCHAR},
      </if>
      <if test="record.recevier != null">
        recevier = #{record.recevier,jdbcType=VARCHAR},
      </if>
      <if test="record.transactionId != null">
        transaction_id = #{record.transactionId,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update order
    set id = #{record.id,jdbcType=BIGINT},
      seckill_id = #{record.seckillId,jdbcType=BIGINT},
      money = #{record.money,jdbcType=DECIMAL},
      user_id = #{record.userId,jdbcType=BIGINT},
      seller_id = #{record.sellerId,jdbcType=BIGINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      pay_time = #{record.payTime,jdbcType=TIMESTAMP},
      `status` = #{record.status,jdbcType=CHAR},
      recevier_address = #{record.recevierAddress,jdbcType=VARCHAR},
      recevier_mobile = #{record.recevierMobile,jdbcType=VARCHAR},
      recevier = #{record.recevier,jdbcType=VARCHAR},
      transaction_id = #{record.transactionId,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.jmss2u.seckill.model.Order">
    update order
    <set>
      <if test="seckillId != null">
        seckill_id = #{seckillId,jdbcType=BIGINT},
      </if>
      <if test="money != null">
        money = #{money,jdbcType=DECIMAL},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="sellerId != null">
        seller_id = #{sellerId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="payTime != null">
        pay_time = #{payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=CHAR},
      </if>
      <if test="recevierAddress != null">
        recevier_address = #{recevierAddress,jdbcType=VARCHAR},
      </if>
      <if test="recevierMobile != null">
        recevier_mobile = #{recevierMobile,jdbcType=VARCHAR},
      </if>
      <if test="recevier != null">
        recevier = #{recevier,jdbcType=VARCHAR},
      </if>
      <if test="transactionId != null">
        transaction_id = #{transactionId,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.jmss2u.seckill.model.Order">
    update order
    set seckill_id = #{seckillId,jdbcType=BIGINT},
      money = #{money,jdbcType=DECIMAL},
      user_id = #{userId,jdbcType=BIGINT},
      seller_id = #{sellerId,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      pay_time = #{payTime,jdbcType=TIMESTAMP},
      `status` = #{status,jdbcType=CHAR},
      recevier_address = #{recevierAddress,jdbcType=VARCHAR},
      recevier_mobile = #{recevierMobile,jdbcType=VARCHAR},
      recevier = #{recevier,jdbcType=VARCHAR},
      transaction_id = #{transactionId,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>